# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.chrome.service import Service as ChromeService
from webdriver_manager.chrome import ChromeDriverManager

class TestSeleniumintegrationtest():
  def setup_method(self, method):
    chrome_options = webdriver.ChromeOptions()
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--headless")
    self.driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()),options=chrome_options)
    #self.driver = webdriver.Chrome()
    driver.implicitly_wait(10)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_seleniumintegrationtest(self):
    self.driver.get("http://127.0.0.1:5000/")
    self.driver.set_window_size(739, 702)
    self.driver.find_element(By.NAME, "item").click()
    self.driver.find_element(By.NAME, "item").send_keys("test add")
    self.driver.find_element(By.CSS_SELECTOR, "button").click()
    self.driver.find_element(By.NAME, "new_item").click()
    self.driver.find_element(By.NAME, "new_item").send_keys("try to update")
    self.driver.find_element(By.CSS_SELECTOR, "li button").click()
    self.driver.find_element(By.LINK_TEXT, "Delete").click()
  
